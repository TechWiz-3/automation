#!/usr/bin/bash

# Inspired by archey osx (https://github.com/obihann/archey-osx/)
# and neofetch (https://github.com/dylanaraps/neofetch)
# A lot of the code here is a less sophisticated version of archey osx
# However, all of it is my own code, except for the ascii apple logo
# and the tput text colouring

# Curl output files are stored in the home directory 

# add motivational quote
# add upload and download speeds option
# news headline

export $(cat .env | xargs)  # import env

RED=$(tput       setaf 1 2>/dev/null)
GREEN=$(tput     setaf 2 2>/dev/null)
YELLOW=$(tput    setaf 3 2>/dev/null)
BLUE=$(tput      setaf 4 2>/dev/null)
PURPLE=$(tput    setaf 5 2>/dev/null)
textColor=$(tput setaf 6 2>/dev/null)
normal=$(tput    sgr0 2>/dev/null)


use_icons="false"
for arguement in "$@"
do
    case $arguement in

        -i|--icons)
        use_icons="true"
        ;;

        -h|--help)
        echo ""
        echo "Usage: stats [options]"
        echo "Options:"
        echo "   -i|--icons        displays nerd font icons with the text"
        echo "   -h|--help         displays this output"
        echo "   -s|--static       displays the information once, outside of a loop"
        echo "  -nc|--no-clear     does not clear the screen before displaying stats"
        echo "                     can only be used effectively with the --static option"
        echo ""
        exit
        ;;

        -s|--static)
        static="true"
        ;;

        -nc|--no-clear)
        clear="false"
        ;;

        *)
        echo "unrecognised argument :("
        exit 1
        ;;
    esac
done

date=$(date +%F)
curl -sH 'Accept: application/vnd.github.cloak-preview' https://api.github.com/search/commits?q=author:TechWiz-3+author-date:$date > ~/.curl_output.json
numberofcommits=$(jq '.total_count' ~/.curl_output.json)
url="http://api.weatherapi.com/v1/current.json?key=$W_API_KEY&q=Sydney"
curl -sq "$url" > ~/.weather.json
temperature=$(jq '.current.temp_c' ~/.weather.json)

get_font_location=$(which get_font)
if [[ -z "$get_font_location" ]] ; then
    echo "get_font tool not found, downloading now from https://github.com/TechWiz-3/automation/tree/main/fetch-font"
    curl https://raw.githubusercontent.com/TechWiz-3/automation/main/fetch-font/get_font > /usr/local/bin/get_font
    chmod +x /usr/local/bin/get_font
    echo "get_font downloaded and installed"
    sleep 2
fi 

nerd_font=$(get_font)
if [[ "$nerd_font" == "true" && "$use_icons" == "true" ]] ; then
    icon_a=""
    icon_b=""
    icon_c=""
    icon_d="﨟"
    icon_e=""
    icon_f=""
    icon_g=""
    icon_h=""
    icon_i=""
    icon_j=""
    icon_k=""
    icon_l=""
else
    icon_d=" "
fi


if [[ "$clear" == "false" ]]
then
    tput sc
else
    clear
fi
while sleep 1; do
    user=$(whoami)
    date=$(date +%F)
    day=$(date +"%a")
    if [ $day == "Sun" ]; then
        day="Sunday"
    elif [ $day == "Sat" ]; then
        day="Saturday"
    elif [ $day == "Fri" ]; then
        day="Friday"
    elif [ $day == "Thu" ]; then
        day="Thursday"
    elif [ $day == "Wed" ]; then
        day="Wednesday"
    elif [ $day == "Tue" ]; then
        day="Tuesday"
    elif [ $day == "Mon" ]; then
        day="Monday"
    fi
    time=$(date +"%T")
    ip=$(ipconfig getifaddr en4)
    kernel=$(uname -rs)
    if [ $numberofcommits -eq 0 ] ; then
        gitcommits=false
    else
        gitcommits=true
    fi

    if [ $gitcommits == true ]; then
        commits="$numberofcommits commits today"
    else
        commits="No commits yet"
    fi
    cpu=$(ps -A -o %cpu | awk '{s+=$1} END {print s "%"}')
    ram=$(top -l 1 -s 0 | grep PhysMem)
    remove="PhysMem: "
    ram=${ram//$remove}
    todo=$(cat todo.txt)

   
if [[ "$clear" == "false" ]]
then
    tput rc
else
    tput cup 0 0
fi
echo -e "
${GREEN#  }                 ###               ${textColor}${icon_a} User: ${normal}$user
${GREEN#  }               ####                ${textColor}${icon_b} Hostname: ${normal}$HOSTNAME
${GREEN#  }               ###                 ${textColor}${icon_c} Date: ${normal}$date
${GREEN#  }       #######    #######          ${textColor}${icon_d}Day: ${normal}$day
${YELLOW# }     ######################        ${textColor}${icon_e} Time: ${normal}$time
${YELLOW# }    #####################          ${textColor}${icon_f} Private IP: ${normal}$ip
${RED#    }    ####################           ${textColor}${icon_g} Commits: ${normal}$commits
${RED#    }    ####################           ${textColor}${icon_i} Kernel: ${normal}$kernel
${RED#    }    #####################          ${textColor}${icon_j} CPU: ${normal}$cpu    
${PURPLE# }     ######################        ${textColor}${icon_k} RAM: ${normal}$ram
${PURPLE# }      ####################         ${textColor}${icon_l} Temperature: ${normal}$temperature
${BLUE#   }        ################           
${BLUE#   }         ####     #####            
${textColor}
 _____         _       _     _     _   
|_   _|__   __| | ___ | |   (_)___| |_ 
  | |/ _ \ / _\` |/ _ \| |   | / __| __|
  | | (_) | (_| | (_) | |___| \__ \ |_ 
  |_|\___/ \__,_|\___/|_____|_|___/\__|

${normal}
$todo
"
if [[ "$static" == "true" ]]
then
    exit
fi
done

