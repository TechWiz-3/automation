#!/usr/bin/bash

# Inspired by archey osx (https://github.com/obihann/archey-osx/)
# and neofetch (https://github.com/dylanaraps/neofetch)
# A lot of the code here is a less sophisticated version of archey osx
# However, all of it is my own code, except for the ascii apple logo
# and the tput text colouring


export $(cat .env | xargs)  # import env

RED=$(tput       setaf 1 2>/dev/null)
GREEN=$(tput     setaf 2 2>/dev/null)
YELLOW=$(tput    setaf 3 2>/dev/null)
BLUE=$(tput      setaf 4 2>/dev/null)
PURPLE=$(tput    setaf 5 2>/dev/null)
textColor=$(tput setaf 6 2>/dev/null)
normal=$(tput    sgr0 2>/dev/null)

# curl -sH 'Accept: application/vnd.github.cloak-preview' \https://api.github.com/search/commits?q=author:TechWiz-3+author-date:$date > curl_output.json
# numberofcommits=$(jq '.total_count' curl_output.json)
numberofcommits=0
url="http://api.weatherapi.com/v1/current.json?key=$W_API_KEY&q=Sydney"
curl -sq "$url" > weather.json
temperature=$(jq '.current.temp_c' weather.json)
# input="todo.txt"
# while IFS= read -r line
# do
#   echo "$line"
# done < "$input"

clear
while sleep 1; do
    user=$(whoami)
    date=$(date +%F)
    day=$(date +"%a")
    if [ $day == "Sun" ]; then
        day="Sunday"
    elif [ $day == "Sat" ]; then
        day="Saturday"
    elif [ $day == "Fri" ]; then
        day="Friday"
    elif [ $day == "Thur" ]; then
        day="Thursday"
    elif [ $day == "Wed" ]; then
        day="Wednesday"
    elif [ $day == "Tue" ]; then
        day="Tuesday"
    elif [ $day == "Mon" ]; then
        day="Monday"
    fi
    time=$(date +"%T")
    ip=$(ipconfig getifaddr en4)
    kernel=$(uname -rs)
    if [ $numberofcommits -eq 0 ] ; then
        gitcommits=false
    else
        gitcommits=true
    fi

    if [ $gitcommits == true ]; then
        commits="$numberofcommits commits today"
    else
        commits="No commits yet"
    fi
    cpu=$(ps -A -o %cpu | awk '{s+=$1} END {print s "%"}')
    ram=$(top -l 1 -s 0 | grep PhysMem)
    remove="PhysMem: "
    ram=${ram//$remove}


    tput cup 0 0
    
echo -e "
${GREEN#  }                 ###               ${textColor}User: ${normal}$user
${GREEN#  }               ####                ${textColor}Hostname: ${normal}$HOSTNAME
${GREEN#  }               ###                 ${textColor}Date: ${normal}$date
${GREEN#  }       #######    #######          ${textColor}Day: ${normal}$day
${YELLOW# }     ######################        ${textColor}Time: ${normal}$time
${YELLOW# }    #####################          ${textColor}IP: ${normal}$ip
${RED#    }    ####################           ${textColor}Commits: ${normal}$commits
${RED#    }    ####################           ${textColor}Kernel: ${normal}$kernel
${RED#    }    #####################          ${textColor}CPU: ${normal}$cpu
${PURPLE# }     ######################        ${textColor}RAM: ${normal}$ram
${PURPLE# }      ####################         ${textColor}Temperature: ${normal}$temperature
${BLUE#   }        ################           
${BLUE#   }         ####     #####            
${textColor}
 _____         _       _     _     _   
|_   _|__   __| | ___ | |   (_)___| |_ 
  | |/ _ \ / _\` |/ _ \| |   | / __| __|
  | | (_) | (_| | (_) | |___| \__ \ |_ 
  |_|\___/ \__,_|\___/|_____|_|___/\__|

${normal}
"
done
echo -e "\033[1mComputer Stats:\033[0m"
cpuinfo=$(sysctl -n machdep.cpu.brand_string)
echo $cpuinfo

# while sleep 1; do
#     cpu=$(ps -A -o %cpu | awk '{s+=$1} END {print s "%"}')
#     echo "$cpu"
#     i=$((i+1))
#     echo $i
# done